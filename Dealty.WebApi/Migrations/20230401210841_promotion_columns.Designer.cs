// <auto-generated />
using System;
using Dealty.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dealty.WebApi.Migrations
{
    [DbContext(typeof(DealtyDBContext))]
    [Migration("20230401210841_promotion_columns")]
    partial class promotion_columns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dealty.WebApi.Data.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsEU")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPoland")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NotificationText")
                        .HasColumnType("longtext");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("NotificationID");

                    b.HasIndex("UserID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.Promotion", b =>
                {
                    b.Property<int>("PromotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InsertedBy")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionID");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.PromotionPhoto", b =>
                {
                    b.Property<int>("PromotionPhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.HasKey("PromotionPhotoID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionPhotos");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.PromotionRating", b =>
                {
                    b.Property<int>("PromotionRatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Vote")
                        .HasColumnType("int");

                    b.HasKey("PromotionRatingID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionRatings");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.UserAlert", b =>
                {
                    b.Property<int>("UserAlertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlertText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEU")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPoland")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PriceFrom")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PriceTo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserAlertId");

                    b.HasIndex("UserID");

                    b.ToTable("UserAlerts");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.Notification", b =>
                {
                    b.HasOne("Dealty.WebApi.Data.User", null)
                        .WithMany("Notifications")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dealty.WebApi.Data.PromotionPhoto", b =>
                {
                    b.HasOne("Dealty.WebApi.Data.Promotion", "Promotion")
                        .WithMany("PromotionPhotos")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.PromotionRating", b =>
                {
                    b.HasOne("Dealty.WebApi.Data.Promotion", "Promotion")
                        .WithMany("PromotionRatings")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dealty.WebApi.Data.User", null)
                        .WithMany("PromotionRatings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.UserAlert", b =>
                {
                    b.HasOne("Dealty.WebApi.Data.User", "User")
                        .WithMany("UserAlerts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.Promotion", b =>
                {
                    b.Navigation("PromotionPhotos");

                    b.Navigation("PromotionRatings");
                });

            modelBuilder.Entity("Dealty.WebApi.Data.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("PromotionRatings");

                    b.Navigation("UserAlerts");
                });
#pragma warning restore 612, 618
        }
    }
}
